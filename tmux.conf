#setting the delay between prefix and command
## START:delay
set -s escape-time 1
## END:delay

# Set the base index for windows to 1 instead of 0
# # START:index
set -g base-index 1
# # END:index

# # Set the base index for panes to 1 instead of 0
# # START:panes_index
setw -g pane-base-index 1
# # END:panes_index

# Set the default terminal mode to 256color mode
# # START:termcolor
set -g default-terminal "screen-256color"
# # END:termcolor

# enable activity alerts
# #START:activity
setw -g monitor-activity on
set -g visual-activity on
# #END:activity

# # set the status line's colors
# # START:statuscolor
set -g status-fg white
set -g status-bg black
# # END:statuscolor

# # set the color of the window list
# # START:windowstatuscolor
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# # END:windowstatuscolor

# # set colors for the active window
# # START:activewindowstatuscolor
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright
# # END:activewindowstatuscolor

# # pane colors
# # START:panecolors
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow
# # END:panecolors

# # Command / message line
# # START:cmdlinecolors
set -g message-fg white
set -g message-bg black
set -g message-attr bright
# # END:cmdlinecolors

# # Status line left side
# # START:statusleft
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
# # END:statusleft

# #START:utf8
# set -g status-utf8 on
# #END:utf8

# # Status line right side
# # 15% | 28 Nov 18:15
# # START: statusright
set -g status-right "#[fg=cyan]%d %b %R"
# # END:statusright

# # Update the status bar every sixty seconds
# # START:updateinterval
set -g status-interval 60
# # END:updateinterval

# # Center the window list
# # START:centerwindowlist
set -g status-justify centre
# # END:centerwindowlist

# set-option -g default-command "reattach-to-user-namespace"
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
 bind-key -T copy-mode-vi v send-keys -X begin-selection
 bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Opens a new pane with the current_path!
bind % split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind '"' split-window -v -c '#{pane_current_path}'  # Split panes vertically

# Key binding for moving between windows
bind-key C-h previous-window
bind-key C-l next-window

#Fixes clipboard regression on OS X Sierra
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Increases the number of lines on a copy buffer.
set-option -g history-limit 5000
